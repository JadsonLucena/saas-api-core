openapi: 3.1.0
info:
  version: 1.0.0
  title: Videoteca REST API Reference
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    CookieAuth:
      type: apiKey
      in: cookie
      name: session
    RefreshTokenAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: []
  - CookieAuth: []
paths:
  /user:
    get: # cannot get all users if you are not an webmaster
      tags: [User]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Field names to sort by. Prefix with a minus sign (-) to sort in descending order.
            Example: `-createdAt,id`
        - in: query
          name: page
          schema:
            type: number
          description: The page number to retrieve.
        - in: query
          name: pageSize
          schema:
            type: number
          description: The number of items per page.
        - in: query
          name: firstName
          schema:
            type: string
          description: The first name of the user to search for.
        - in: query
          name: lastName
          schema:
            type: string
          description: The last name of the user to search for.
        - in: query
          name: username
          schema:
            type: string
          description: The username of the user to search for.
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '204':
          description: No Content
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        firstName:
                          type: string
                        lastName:
                          type: string
                        username:
                          type: string
                        picture:
                          type: string
                          format: uri
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                  length:
                    type: number
    post:
      tags: [User]
      security:
        - BearerAuth: []
        - CookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                username:
                  type: string
                password:
                  type: string
                  format: password
                picture:
                  type: string
                  format: byte
                email:
                  type: string
                  format: email
                phone:
                  type: array
                  items:
                    type: string
              required:
                - firstName
                - lastName
                - username
                - password
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid

  /user/{accountId}:
    get:
      tags: [User]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Field names to sort by. Prefix with a minus sign (-) to sort in descending order.
            Example: `-createdAt,id`
        - in: query
          name: page
          schema:
            type: number
          description: The page number to retrieve.
        - in: query
          name: pageSize
          schema:
            type: number
          description: The number of items per page.
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  firstName:
                    type: string
                  lastName:
                    type: string
                  username:
                    type: string
                  picture:
                    type: string
                    format: uri
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
    put:
      tags: [User]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - type: object
                  properties:
                    firstName:
                      type: string
                - type: object
                  properties:
                    lastName:
                      type: string
                - type: object
                  properties:
                    password:
                      type: string
                      format: password
                - type: object
                  properties:
                    picture:
                      type: string
                      format: byte
                - type: object
                  properties:
                    email:
                      type: string
                      format: email
                - type: object
                  properties:
                    phone:
                      type: array
                      items:
                        type: string
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '204':
          description: No Content
    delete: # cannot delete if you are the sole administrator of an account
      tags: [User]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '204':
          description: No Content
  /user/confirm_email: # cannot confirm more than once. After the trial ends, email confirmation should be mandatory.
    put:
      tags: [User]
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '204':
          description: No Content
  /user/decline_email: # cannot decline if already confirmed
    put:
      tags: [User]
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '204':
          description: No Content

  /auth/login:
    post:
      tags: [Auth]
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    username:
                      type: string
                    password:
                      type: string
                      format: password
                - type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                      format: password
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
        '200':
          description: Ok
          headers:
            Set-Cookie:
              description: O JWT é retornado no cookie com o nome `session`.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  refreshToken:
                    type: string
  /auth/refresh:
    post:
      tags: [Auth]
      security:
        - RefreshTokenAuth: []
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '204':
          description: No Content
          headers:
            Set-Cookie:
              description: O JWT é retornado no cookie com o nome `session`.
              schema:
                type: string
  /auth/renew-refresh:
    post:
      tags: [Auth]
      security:
        - RefreshTokenAuth: []
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  refreshToken:
                    type: string
  /auth/logout:
    post:
      tags: [Auth]
      security:
        - CookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '204':
          description: No Content
          headers:
            Set-Cookie:
              description: Clears the session cookie by setting it with `Max-Age=0`.
              schema:
                type: string
                example: session=; Path=/; Max-Age=0;
  /auth/forgot_password:
    post:
      tags: [Auth]
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - type: object
                  properties:
                    email:
                      type: string
                      format: email
                - type: object
                  properties:
                    username:
                      type: string
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '429':
          description: Too Many Requests
        '200':
          description: Ok
  /auth/reset_password:
    put:
      tags: [Auth]
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  format: password
              required:
                - password
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '204':
          description: No Content
  /auth/verify_2fa:
    post:
      tags: [Auth]
      security:
        - CookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
              required:
                - code
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '204':
          description: No Content

  /account:
    get:
      tags: [Account]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Field names to sort by. Prefix with a minus sign (-) to sort in descending order.
            Example: `-createdAt,id`
        - in: query
          name: page
          schema:
            type: number
          description: The page number to retrieve.
        - in: query
          name: pageSize
          schema:
            type: number
          description: The number of items per page.
        - in: query
          name: name
          schema:
            type: string
          description: The name of the account to search for.
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '204':
          description: No Content
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        picture:
                          type: string
                          format: uri
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                  length:
                    type: number
    post:
      tags: [Account]
      security:
        - BearerAuth: []
        - CookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                picture:
                  type: string
                  format: byte
              required:
                - name
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid

  /account/{accountId}:
    get:
      tags: [Account]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Field names to sort by. Prefix with a minus sign (-) to sort in descending order.
            Example: `-createdAt,id`
        - in: query
          name: page
          schema:
            type: number
          description: The page number to retrieve.
        - in: query
          name: pageSize
          schema:
            type: number
          description: The number of items per page.
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  picture:
                    type: string
                    format: uri
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
    put:
      tags: [Account]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - type: object
                  properties:
                    name:
                      type: string
                - type: object
                  properties:
                    picture:
                      type: string
                      format: byte
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '204':
          description: No Content
    delete: # cannot delete if there is only one account. Cannot delete if it has resources attached
      tags: [Account]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '204':
          description: No Content

  /account/{accountId}/user:
    get:
      tags: [Account]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Field names to sort by. Prefix with a minus sign (-) to sort in descending order.
            Example: `-createdAt,id`
        - in: query
          name: page
          schema:
            type: number
          description: The page number to retrieve.
        - in: query
          name: pageSize
          schema:
            type: number
          description: The number of items per page.
        - in: query
          name: firstName
          schema:
            type: string
          description: The first name of the user to search for.
        - in: query
          name: lastName
          schema:
            type: string
          description: The last name of the user to search for.
        - in: query
          name: username
          schema:
            type: string
          description: The username of the user to search for.
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '204':
          description: No Content
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        firstName:
                          type: string
                        lastName:
                          type: string
                        username:
                          type: string
                        picture:
                          type: string
                          format: uri
                        roleId:
                          type: string
                          format: uuid
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        confirmedAt:
                          type: string
                          format: date-time
                  length:
                    type: number
    post:
      tags: [Account]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    roleId:
                      type: string
                      format: uuid
                    userId:
                      type: string
                      format: uuid
                - type: object
                  properties:
                    roleId:
                      type: string
                      format: uuid
                    username:
                      type: string
                - type: object
                  properties:
                    roleId:
                      type: string
                      format: uuid
                    email:
                      type: string
                      format: email
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '201':
          description: Created

  /account/{accountId}/user/{userId}:
    get:
      tags: [Account]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Field names to sort by. Prefix with a minus sign (-) to sort in descending order.
            Example: `-createdAt,id`
        - in: query
          name: page
          schema:
            type: number
          description: The page number to retrieve.
        - in: query
          name: pageSize
          schema:
            type: number
          description: The number of items per page.
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  firstName:
                    type: string
                  lastName:
                    type: string
                  username:
                    type: string
                  picture:
                    type: string
                    format: uri
                  roleId:
                    type: string
                    format: uuid
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  confirmedAt:
                    type: string
                    format: date-time
    put: # The account cannot be left without an admin
      tags: [Account]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: string
                  format: uuid
              required:
                - roleId
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '204':
          description: No Content
    delete: # cannot delete if there is only one user or if it is the only admin
      tags: [Account]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '204':
          description: No Content
  /account/confirm_invite: # cannot confirm more than once
    put:
      tags: [Account]
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '204':
          description: No Content
  /account/decline_invite: # cannot decline if already confirmed
    put:
      tags: [Account]
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '204':
          description: No Content

  /scope:
    get:
      tags: [Scope]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Field names to sort by. Prefix with a minus sign (-) to sort in descending order.
            Example: `-createdAt,id`
        - in: query
          name: page
          schema:
            type: number
          description: The page number to retrieve.
        - in: query
          name: pageSize
          schema:
            type: number
          description: The number of items per page.
        - in: query
          name: uri
          schema:
            type: string
          description: The uri of the scope to search for.
        - in: query
          name: method
          schema:
            type: string
          description: The method of the scope to search for.
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '204':
          description: No Content
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        description:
                          type: string
                        uri:
                          type: string
                          format: uri
                        method:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                  length:
                    type: number

  /scope/{accountId}:
    get:
      tags: [Scope]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: number
          required: true
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Field names to sort by. Prefix with a minus sign (-) to sort in descending order.
            Example: `-createdAt,id`
        - in: query
          name: page
          schema:
            type: number
          description: The page number to retrieve.
        - in: query
          name: pageSize
          schema:
            type: number
          description: The number of items per page.
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  description:
                    type: string
                  uri:
                    type: string
                  method:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time

  /account/{accountId}/role:
    get:
      tags: [Role]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Field names to sort by. Prefix with a minus sign (-) to sort in descending order.
            Example: `-createdAt,id`
        - in: query
          name: page
          schema:
            type: number
          description: The page number to retrieve.
        - in: query
          name: pageSize
          schema:
            type: number
          description: The number of items per page.
        - in: query
          name: name
          schema:
            type: string
          description: The name of the role to search for.
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '204':
          description: No Content
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        description:
                          type: string
                        user_id:
                          type: string
                          format: uuid
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                  length:
                    type: number
    post:
      tags: [Role]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                user_id:
                  type: string
                  format: uuid
                scopes:
                  type: array
                  items:
                    type: number
              required:
                - name
                - description
                - user_id
                - scopes
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid

  /account/{accountId}/role/{roleId}:
    get:
      tags: [Role]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: roleId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Field names to sort by. Prefix with a minus sign (-) to sort in descending order.
            Example: `-createdAt,id`
        - in: query
          name: page
          schema:
            type: number
          description: The page number to retrieve.
        - in: query
          name: pageSize
          schema:
            type: number
          description: The number of items per page.
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  description:
                    type: string
                  scopes:
                    type: array
                    items:
                      type: number
                  user_id:
                    type: string
                    format: uuid
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
    put:
      tags: [Role]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: roleId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - type: object
                  properties:
                    name:
                      type: string
                - type: object
                  properties:
                    description:
                      type: string
                - type: object
                  properties:
                    scopes:
                      type: array
                      items:
                        type: number
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '204':
          description: No Content
    delete: # cannot delete if it is the only role
      tags: [Role]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: roleId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '204':
          description: No Content

  /account/{accountId}/token:
    get:
      tags: [Token]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Field names to sort by. Prefix with a minus sign (-) to sort in descending order.
            Example: `-createdAt,id`
        - in: query
          name: page
          schema:
            type: number
          description: The page number to retrieve.
        - in: query
          name: pageSize
          schema:
            type: number
          description: The number of items per page.
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '204':
          description: No Content
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        token:
                          type: string
                        roleId:
                          type: string
                          format: uuid
                        expiresIn:
                          type: string
                          format: date-time
                        createdAt:
                          type: string
                          format: date-time
                  length:
                    type: number
    post:
      tags: [Token]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: string
                  format: uuid
                expiresIn:
                  type: string
                  format: date-time
              required:
                - roleId
                - expiresIn
      responses:
        '500':
          description: Internal Error
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid

  /account/{accountId}/token/{tokenId}:
    get:
      tags: [Token]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: tokenId
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: sort
          schema:
            type: string
          description: |
            Field names to sort by. Prefix with a minus sign (-) to sort in descending order.
            Example: `-createdAt,id`
        - in: query
          name: page
          schema:
            type: number
          description: The page number to retrieve.
        - in: query
          name: pageSize
          schema:
            type: number
          description: The number of items per page.
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  token:
                    type: string
                  roleId:
                    type: string
                    format: uuid
                  expiresIn:
                    type: string
                    format: date-time
                  createdAt:
                    type: string
                    format: date-time
    delete:
      tags: [Token]
      security:
        - BearerAuth: []
        - CookieAuth: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: tokenId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '500':
          description: Internal Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '204':
          description: No Content